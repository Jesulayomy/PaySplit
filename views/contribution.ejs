<!DOCTYPE html>
<html lang="en">
<%- include('chunks/head') -%>
<body>
  <%- include('chunks/navbar') -%>

  <div class="container-fluid row m-0 p-3 py-lg-3 p-lg-5 pt-0">
    <div class="p-3 py-lg-3 p-lg-5 pt-0"><a class="btn btn-md btn-md-lg bg-white rounded-pill shadow-sm" href="/home"><span class="fa fa-chevron-left"></span> Home</a></div>
    <div class="col-sm-6 m-0 p-0">
      <%- include('chunks/cont.ejs') -%>
      <%- include('chunks/invite.ejs') -%>
      <%- include('chunks/group') -%>
    </div>
    <div class="col-sm-6 m-0 p-0">
      <%- include('chunks/items.ejs') -%>
    </div>
  </div>
	<%- include('chunks/foot') -%>

  <script>
  // https://www.w3schools.com/howto/howto_js_autocomplete.asp
  function autocomplete(inp, arr) {
    var currentFocus;
    inp.addEventListener("input", function(e) {
        var a, b, i, val = this.value;
        closeAllLists();
        if (!val) { return false;}
        currentFocus = -1;
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "autocomplete-list");
        a.setAttribute("class", "autocomplete-items");
        this.parentNode.appendChild(a);
        for (i = 0; i < arr.length; i++) {
          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
            b = document.createElement("DIV");
            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
            b.innerHTML += arr[i].substr(val.length);
            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
            b.addEventListener("click", function(e) {
              inp.value = this.getElementsByTagName("input")[0].value;
              closeAllLists();
            });
            a.appendChild(b);
          }
        }
    });
    inp.addEventListener("keydown", function(e) {
        var x = document.getElementById(this.id + "autocomplete-list");
        if (x) x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
          currentFocus++;
          addActive(x);
        } else if (e.keyCode == 38) {
          currentFocus--;
          addActive(x);
        } else if (e.keyCode == 13) {
          e.preventDefault();
          if (currentFocus > -1) {
            if (x) x[currentFocus].click();
          }
        }
    });
    function addActive(x) {
      if (!x) return false;
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);
      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
  }
  </script>


  <script>
    const selectedItems = [];

    document.querySelectorAll('.item-toggle').forEach(toggle => {
      toggle.addEventListener('change', function() {
        const itemID = this.getAttribute('id');
        if (this.checked) {
          let newAmount;
          if (itemID !== "taxButton" && itemID !== "tipButton") {
            selectedItems.push(itemID);
            newAmount = Number(document.querySelector(`span#item-${itemID}`).innerText);
          } else if (itemID === "taxButton") {
            newAmount = Number(document.querySelector(`span#taxID`).innerText);
          } else if (itemID === "tipButton") {
            newAmount = Number(document.querySelector(`span#tipID`).innerText);
          }
          newAmount += parseFloat(document.querySelector('input[name="payAmount"]').value);
          document.querySelector('input[name="payAmount"]').value = newAmount.toFixed(2);
        } else {
          let newAmount;
          if (itemID !== "taxButton" && itemID !== "tipButton") {
            const index = selectedItems.findIndex(i => i === itemID);
            if (index > -1) {
              selectedItems.splice(index, 1);
            }
            newAmount = Number(document.querySelector(`span#item-${itemID}`).innerText);
          } else if (itemID === "taxButton") {
            newAmount = Number(document.querySelector(`span#taxID`).innerText);
          } else if (itemID === "tipButton") {
            newAmount = Number(document.querySelector(`span#tipID`).innerText);
          }
          newAmount = parseFloat(document.querySelector('input[name="payAmount"]').value) - newAmount; 
          document.querySelector('input[name="payAmount"]').value = newAmount.toFixed(2);
        }
      });
    });
  </script>

  <% if (invite) { %>
    <script>
      document.getElementById('accept').addEventListener('click', function() {
        const id = '<%= contribution._id %>';
        fetch(`/contributions/${id}/accept`, { method: 'POST' })
          .then(response => {
            if (response.ok) {
              location.reload();
            } else {
              console.error('Failed to accept invite');
            }
          })
          .catch(error => console.error('Error:', error));
      });
    </script>
  <% } else { %>
    <script>
      const payForm = document.getElementById('payContainer');
      payForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const id = '<%= contribution._id %>';
        const amount = parseFloat(document.querySelector('input[name="payAmount"]').value);
        if (!Number.isNaN(amount) && amount > 0) {
          fetch(`/contributions/${id}/pay`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ amount, items: selectedItems }) 
          })
          .then(response => {
            if (response.ok) {
              location.reload();
            } else {
              console.error('Failed to process payment');
            }
          })
          .catch(error => console.error('Error', error));
        } else {
          document.querySelector('input[name="payAmount"]').style.border = '2px solid red';
        }
      });  
    </script>
  <% } %>
  <script>
    const allUsers = [];
    fetch('/users')
    .then(response => response.json())
    .then(data => {
      const userEmails = data.users.map(user => user.email);
      autocomplete(document.getElementById("autoInvite"), userEmails);
    });
    const inviteForm = document.getElementById('inviteForm');
    inviteForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      const id = '<%= contribution._id %>';
      const email = document.querySelector('input[name="invite"]').value;
      fetch(`/contributions/${id}/invite`, {
        method: 'POST',
        headers: {
        'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email })
      })
        .then(response => {
          if (response.ok) {
            location.reload();
          } else {
            response.json().then(data => {
              document.querySelector('.toast-body').innerText = data.message;
              const toast = new bootstrap.Toast(document.getElementById('validEmailToast'));
              toast.show();
            })
          }
        })
        .catch(error => console.error('Error:', error));
    });

  </script>
<%- include('chunks/footer') -%>